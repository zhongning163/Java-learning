/*
内部类：
将一个类定义在另一个类的里面，对里面那个类
称为内部类（内置类，嵌套类）

访问特点：
	内部类可以直接访问外部类中的成员，包括私有成员
	而外部类要访问内部类中的成员必须建立内部类的对象

一般用于类的设计
分析事物时，发现该事物描述中还有事物，而且这个事物还在访问被描述事物的内容
这时就将“还有的事物”定义成内部类来描述

*/

class Outer
{
	private static int num=3;

	static class Inner	//内部类。
	{
		void show()
		{
			System.out.println("show run..."+num);
		}

		static void function()	//如果内部类中定义了静态成员，该内部类也必须是静态的
		{
			System.out.println("function run..."+num);
		}
	}

	public void method()
	{
		Inner in=new Inner();
		in.show();
	}
}

class InnerClass
{
	public static void main(String[] args)
	{
		Outer out=new Outer();
		out.method();
		//直接访问外部类中的内部类的成员
		//Outer.Inner in=new Outer().new Inner();
		//in.show();

		//如果内部类是静态的。相当于一个外部类
			Outer.Inner in=new Outer.Inner();
			in.show();
		//如果内部类是静态的，成员是静态的
			Outer.Inner.function();
	}
}
